name: Build OpenWrt with OpenSync

on:
  push:
    branches: [ pending, staging-* ]

jobs:
  build-ea8300:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for EA8300
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "ea8300-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=IPQ40XX
        TAR_NAME="ea8300-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ea8300/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="ea8300-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic $(find openwrt/bin/targets/ipq40xx/generic -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ea8300/dev/"$UPGRADE_TAR_NAME""

  build-ecw5410:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for ECW5410
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "ecw5410-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=ECW5410
        TAR_NAME="ecw5410-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq806x/generic .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ecw5410/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="ecw5410-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq806x/generic $(find openwrt/bin/targets/ipq806x/generic -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ecw5410/dev/"$UPGRADE_TAR_NAME""

  build-ap2220:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for AP2220
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "ap2220-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=AP2220
        TAR_NAME="ap2220-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ap2220/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="ap2220-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic $(find openwrt/bin/targets/ipq40xx/generic -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ap2220/dev/"$UPGRADE_TAR_NAME""

  build-ecw5211:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for ECW5211
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "ecw5211-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=ECW5211
        TAR_NAME="ecw5211-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ecw5211/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="ecw5211-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic $(find openwrt/bin/targets/ipq40xx/generic -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ecw5211/dev/"$UPGRADE_TAR_NAME""

  build-ec420:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for EC420
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "ec420-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=EC420
        TAR_NAME="ec420-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ec420/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="ec420-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic $(find openwrt/bin/targets/ipq40xx/generic -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ec420/dev/"$UPGRADE_TAR_NAME""

  build-eap101:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for EAP101
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "eap101-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=EAP101
        TAR_NAME="eap101-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq60xx .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/eap101/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="eap101-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq60xx $(find openwrt/bin/targets/ipq807x/ipq60xx -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/eap101/dev/"$UPGRADE_TAR_NAME""

  build-eap102:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for EAP102
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "eap102-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=EAP102
        TAR_NAME="eap102-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq807x .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/eap102/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="eap102-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq807x $(find openwrt/bin/targets/ipq807x/ipq807x -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/eap102/dev/"$UPGRADE_TAR_NAME""

  build-wf188n:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for WF188n
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "wf188n-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=WF188N
        TAR_NAME="wf188n-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq60xx .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/wf188n/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="wf188n-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq60xx $(find openwrt/bin/targets/ipq807x/ipq60xx -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/wf188n/dev/"$UPGRADE_TAR_NAME""

  build-wf194c:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for WF194C
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "wf194c-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=WF194C
        TAR_NAME="wf194c-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq807x .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/wf194c/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="wf194c-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq807x $(find openwrt/bin/targets/ipq807x/ipq807x -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/wf194c/dev/"$UPGRADE_TAR_NAME""

  build-wf194c4:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for WF194C4
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "wf194c4-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=WF194C4
        TAR_NAME="wf194c4-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq807x .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/wf194c4/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="wf194c4-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq807x $(find openwrt/bin/targets/ipq807x/ipq807x -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/wf194c4/dev/"$UPGRADE_TAR_NAME""

  build-wf610d:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for WF610D
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "wf610d-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=WF610D
        TAR_NAME="wf610d-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/wf610d/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="wf610d-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic $(find openwrt/bin/targets/ipq40xx/generic -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/wf610d/dev/"$UPGRADE_TAR_NAME""

  build-ex227:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for EX227
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "ex227-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=EX227
        TAR_NAME="ex227-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq807x .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ex227/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="ex227-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq807x $(find openwrt/bin/targets/ipq807x/ipq807x -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ex227/dev/"$UPGRADE_TAR_NAME""

  build-ex447:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for EX447
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "ex447-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=EX447
        TAR_NAME="ex447-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq807x .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ex447/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="ex447-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq807x/ipq807x $(find openwrt/bin/targets/ipq807x/ipq807x -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/ex447/dev/"$UPGRADE_TAR_NAME""


  build-hfcl_ion4:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_BUILD_TOKEN }}
        submodules: true
    - name: Build Image for HFCL ION4
      env:
          GH_BUILD_USERNAME: ${{ secrets.GH_BUILD_USERNAME }}
          GH_BUILD_PASSWORD: ${{ secrets.GH_BUILD_PASSWORD }}
      run: |
        TAG=$(date +%Y-%m-%d)-$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)
        echo "ion4-$TAG" > feeds/wlan-ap/opensync/src/vendor/tip/.pkgname
        make TARGET=HFCL_ION4
        TAR_NAME="hfcl_ion4-artifacts-$TAG.tar.gz"
        tar cfz "$TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic .
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/hfcl_ion4/dev/artifacts/"$TAR_NAME""
        UPGRADE_TAR_NAME="hfcl_ion4-$TAG.tar.gz"
        tar cfz "$UPGRADE_TAR_NAME" -C openwrt/bin/targets/ipq40xx/generic $(find openwrt/bin/targets/ipq40xx/generic -type f \( -name '*sysupgrade*' -o -name 'sha256sums' \) -printf "%f\n")
        curl -u "$GH_BUILD_USERNAME":"$GH_BUILD_PASSWORD" -T "$UPGRADE_TAR_NAME" "https://tip.jfrog.io/artifactory/tip-wlan-ap-firmware/hfcl_ion4/dev/"$UPGRADE_TAR_NAME""
