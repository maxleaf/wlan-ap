From 8b89cb2e9b927de818cc950dcb237da5381665fe Mon Sep 17 00:00:00 2001
From: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
Date: Wed, 10 Aug 2022 23:47:57 -0700
Subject: [PATCH 11/12] ath12k: Make use of TID classification offload

Don't set HAL_TCL_DATA_CMD_INFO2_TID_OVERWRITE flag to TCL,
HW only take care of tid classification if this flag is not set.

Signed-off-by: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_tx.c  | 17 -----------------
 drivers/net/wireless/ath/ath12k/hal_tx.c |  3 +--
 drivers/net/wireless/ath/ath12k/mac.c    |  1 +
 3 files changed, 2 insertions(+), 19 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp_tx.c b/drivers/net/wireless/ath/ath12k/dp_tx.c
index 5bbd20f82f2f..fd908f900fb4 100644
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -39,19 +39,6 @@ static void ath12k_dp_tx_encap_nwifi(struct sk_buff *skb)
 	hdr->frame_control &= ~__cpu_to_le16(IEEE80211_STYPE_QOS_DATA);
 }
 
-static u8 ath12k_dp_tx_get_tid(struct sk_buff *skb)
-{
-	struct ieee80211_hdr *hdr = (void *)skb->data;
-	struct ath12k_skb_cb *cb = ATH12K_SKB_CB(skb);
-
-	if (cb->flags & ATH12K_SKB_HW_80211_ENCAP)
-		return skb->priority & IEEE80211_QOS_CTL_TID_MASK;
-	else if (!ieee80211_is_data_qos(hdr->frame_control))
-		return HAL_DESC_REO_NON_QOS_TID;
-	else
-		return skb->priority & IEEE80211_QOS_CTL_TID_MASK;
-}
-
 enum hal_encrypt_type ath12k_dp_tx_get_encrypt_type(u32 cipher)
 {
 	switch (cipher) {
@@ -209,10 +196,6 @@ tcl_ring_sel:
 			     FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_TCP6_CKSUM_EN, 1);
 	}
 
-	ti.flags1 |= FIELD_PREP(HAL_TCL_DATA_CMD_INFO3_TID_OVERWRITE, 1);
-
-	ti.tid = ath12k_dp_tx_get_tid(skb);
-
 	switch (ti.encap_type) {
 	case HAL_TCL_ENCAP_TYPE_NATIVE_WIFI:
 		ath12k_dp_tx_encap_nwifi(skb);
diff --git a/drivers/net/wireless/ath/ath12k/hal_tx.c b/drivers/net/wireless/ath/ath12k/hal_tx.c
index ffb65ff93d14..81c087ddf6c8 100644
--- a/drivers/net/wireless/ath/ath12k/hal_tx.c
+++ b/drivers/net/wireless/ath/ath12k/hal_tx.c
@@ -61,8 +61,7 @@ void ath12k_hal_tx_cmd_desc_setup(struct ath12k_base *ab, void *cmd,
 		FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_DATA_LEN, ti->data_len) |
 		FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_PKT_OFFSET, ti->pkt_offset);
 
-	tcl_cmd->info3 = (ti->flags1 |
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO3_TID, ti->tid)) |
+	tcl_cmd->info3 = ti->flags1 |
 		FIELD_PREP(HAL_TCL_DATA_CMD_INFO3_PMAC_ID, ti->lmac_id) |
 		FIELD_PREP(HAL_TCL_DATA_CMD_INFO3_VDEV_ID, ti->vdev_id);
 
diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 1cd1b514b7a2..5af1732e19f5 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -10855,6 +10855,7 @@ static int ath12k_mac_hw_register(struct ath12k_hw *ah)
 	ieee80211_hw_set(hw, SUPPORTS_REORDERING_BUFFER);
 	ieee80211_hw_set(hw, SUPPORTS_AMSDU_IN_AMPDU);
 	ieee80211_hw_set(hw, USES_RSS);
+	ieee80211_hw_set(hw, SUPPORTS_TID_CLASS_OFFLOAD);
 
 	if (ath12k_frame_mode == ATH12K_HW_TXRX_ETHERNET) {
 		ieee80211_hw_set(hw, SUPPORTS_TX_ENCAP_OFFLOAD);
-- 
2.17.1

