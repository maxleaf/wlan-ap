From d39daef4871488f4cd604c9a9987daebf0965746 Mon Sep 17 00:00:00 2001
From: Balamurugan Mahalingam <quic_bmahalin@quicinc.com>
Date: Tue, 22 Nov 2022 00:39:54 -0800
Subject: [PATCH 2/6] ath12k: Optimize the tx completion routine

Use cached descriptor for WBM2SW completion and avoid unnecessary
if checks

Signed-off-by: Balamurugan Mahalingam <quic_bmahalin@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp.c    |  2 +-
 drivers/net/wireless/ath/ath12k/dp_tx.c | 35 ++++++++-----------------
 2 files changed, 12 insertions(+), 25 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp.c
+++ b/drivers/net/wireless/ath/ath12k/dp.c
@@ -248,9 +248,9 @@ int ath12k_dp_srng_setup(struct ath12k_b
 		/* Allocate the reo dst and tx completion rings from cacheable memory */
 		switch (type) {
 		case HAL_REO_DST:
+		case HAL_WBM2SW_RELEASE:
 			cached = true;
 			break;
-		case HAL_WBM2SW_RELEASE:
 		default:
 			cached = false;
 		}
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -866,7 +866,7 @@ int ath12k_dp_tx_completion_handler(stru
 	u8 mac_id;
 	int valid_entries;
 	int workdone = 0;
-	struct hal_wbm_completion_ring_tx tx_status = { 0 };
+	struct hal_wbm_completion_ring_tx *tx_status;
 	enum hal_wbm_rel_src_module buf_rel_source;
 
 
@@ -884,18 +884,17 @@ int ath12k_dp_tx_completion_handler(stru
 		if (!ath12k_dp_tx_completion_valid(desc))
 			continue;
 
-		memcpy(&tx_status, desc,
-		       sizeof(struct hal_wbm_completion_ring_tx));
+		tx_status = desc;
 
-		if (likely(FIELD_GET(HAL_WBM_COMPL_TX_INFO0_CC_DONE, tx_status.info0))) {
+		if (likely(HAL_WBM_COMPL_TX_INFO0_CC_DONE & tx_status->info0)) {
 			/* HW done cookie conversion */
 			tx_desc = (struct ath12k_tx_desc_info *)(uintptr_t)
-					(tx_status.buf_va_lo |
-					(((u64)tx_status.buf_va_hi) << 32));
+					(tx_status->buf_va_lo |
+					(((u64)tx_status->buf_va_hi) << 32));
 		} else {
 			/* SW does cookie conversion to VA */
 			desc_id = FIELD_GET(BUFFER_ADDR_INFO1_SW_COOKIE,
-					    tx_status.buf_va_hi);
+					    tx_status->buf_va_hi);
 
 			tx_desc = ath12k_dp_get_tx_desc(ab, desc_id);
 		}
@@ -911,11 +910,11 @@ int ath12k_dp_tx_completion_handler(stru
 		 * to reduce contention
 		 */
 		ath12k_dp_tx_release_txbuf(dp, tx_desc, tx_desc->pool_id);
-		buf_rel_source = FIELD_GET(HAL_WBM_RELEASE_INFO0_REL_SRC_MODULE,
-					   tx_status.info0);
+		/* Find the HAL_WBM_RELEASE_INFO0_REL_SRC_MODULE value */
+		buf_rel_source = tx_status->info0 & HAL_WBM_RELEASE_INFO0_REL_SRC_MASK;
 		if (unlikely(buf_rel_source == HAL_WBM_REL_SRC_MODULE_FW)) {
 			ath12k_dp_tx_process_htt_tx_complete(ab,
-							     (void *)&tx_status,
+							     (void *)tx_status,
 							     mac_id, msdu,
 							     tx_ring, skb_ext_desc);
 			continue;
@@ -926,7 +925,8 @@ int ath12k_dp_tx_completion_handler(stru
 		if (atomic_dec_and_test(&ar->dp.num_tx_pending))
 			wake_up(&ar->dp.tx_empty_waitq);
 
-		ath12k_dp_tx_complete_msdu(ar, msdu, &tx_status, buf_rel_source, skb_ext_desc);
+		ath12k_dp_tx_complete_msdu(ar, msdu, tx_status, buf_rel_source,
+					   skb_ext_desc);
 		budget--;
 	}
 
--- a/drivers/net/wireless/ath/ath12k/hal_desc.h
+++ b/drivers/net/wireless/ath/ath12k/hal_desc.h
@@ -1883,7 +1883,7 @@ struct hal_wbm_completion_ring_rx {
 #define HAL_WBM_COMPL_TX_INFO0_TQM_RELEASE_REASON	GENMASK(16, 13)
 #define HAL_WBM_COMPL_TX_INFO0_RBM_OVERRIDE_VLD		BIT(17)
 #define HAL_WBM_COMPL_TX_INFO0_SW_COOKIE_LO		GENMASK(29, 18)
-#define HAL_WBM_COMPL_TX_INFO0_CC_DONE			BIT(30)
+#define HAL_WBM_COMPL_TX_INFO0_CC_DONE			0x40000000
 #define HAL_WBM_COMPL_TX_INFO0_WBM_INTERNAL_ERROR	BIT(31)
 
 #define HAL_WBM_COMPL_TX_INFO1_TQM_STATUS_NUMBER	GENMASK(23, 0)
@@ -1980,6 +1980,7 @@ struct hal_wbm_release_ring_cc_rx {
 	u32 info1;
 } __packed;
 
+#define HAL_WBM_RELEASE_INFO0_REL_SRC_MASK		0x7
 #define HAL_WBM_RELEASE_INFO0_REL_SRC_MODULE		GENMASK(2, 0)
 #define HAL_WBM_RELEASE_INFO0_DESC_TYPE			GENMASK(8, 6)
 #define HAL_WBM_RELEASE_INFO0_RXDMA_PUSH_REASON		GENMASK(18, 17)
