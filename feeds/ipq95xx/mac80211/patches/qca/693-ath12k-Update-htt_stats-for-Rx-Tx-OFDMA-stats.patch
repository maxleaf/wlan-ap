From b3d18fc4be8654d5e5d224c974061e70fb5b9fee Mon Sep 17 00:00:00 2001
From: Dinesh Karthikeyan <quic_dinek@quicinc.com>
Date: Fri, 18 Nov 2022 20:02:16 +0530
Subject: [PATCH] ath12k: Update htt_stats for Rx,Tx,OFDMA stats

Add support to update the htt_stats for type 9-TX_PDEV_RATE_STATS and
10-RX_PDEV_RATE_STATS and TX_PDEV_BE_OFDMA_STATS. Modify the alignment
in the existing OFDMA stats.

Signed-off-by: Dinesh Karthikeyan <quic_dinek@quicinc.com>
---
 .../wireless/ath/ath12k/debugfs_htt_stats.c   | 88 +++++++++++++++++--
 .../wireless/ath/ath12k/debugfs_htt_stats.h   | 20 +++++
 2 files changed, 102 insertions(+), 6 deletions(-)

Index: backports-20220404-5.4.164-f40abb4788/drivers/net/wireless/ath/ath12k/debugfs_htt_stats.c
===================================================================
--- backports-20220404-5.4.164-f40abb4788.orig/drivers/net/wireless/ath/ath12k/debugfs_htt_stats.c	2022-11-19 15:18:55.874265141 +0530
+++ backports-20220404-5.4.164-f40abb4788/drivers/net/wireless/ath/ath12k/debugfs_htt_stats.c	2022-11-19 15:26:32.207452844 +0530
@@ -3237,12 +3237,64 @@ static inline void htt_print_tx_pdev_rat
 				   NULL, HTT_TX_PDEV_STATS_NUM_EXTRA_MCS_COUNTERS, "\n");
 	}
 
+	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->ofdma_tx_ru_size,
+			   "ofdma_tx_ru_size",
+			   HTT_TX_PDEV_STATS_NUM_AX_RU_SIZE_COUNTERS, "\n");
+
 	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->tx_dcm, "tx_dcm",
-			   HTT_TX_PDEV_STATS_NUM_DCM_COUNTERS, "\n\n");
+			   HTT_TX_PDEV_STATS_NUM_DCM_COUNTERS, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->tx_su_punctured_mode,
 			   "tx_su_punctured_mode",
-			   HTT_TX_PDEV_STATS_NUM_PUNCTURED_MODE_COUNTERS, "\n\n");
+			   HTT_TX_PDEV_STATS_NUM_PUNCTURED_MODE_COUNTERS, "\n");
+
+	for (j = 0; j < HTT_TX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES; j++) {
+		len += scnprintf(buf + len, buf_len - len, j == 0 ?
+				 "half_tx_bw = " :"quarter_tx_bw = ");
+		PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->reduced_tx_bw[j], NULL,
+				   HTT_TX_PDEV_STATS_NUM_BW_COUNTERS, "\n");
+	}
+
+	for (j = 0; j < HTT_TX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES; j++) {
+		len += scnprintf(buf + len, buf_len - len, j == 0 ?
+				 "half_ac_mu_mimo_tx_bw = " :"quarter_ac_mu_mimo_tx_bw = ");
+		PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->reduced_ac_mu_mimo_tx_bw[j], NULL,
+				   HTT_TX_PDEV_STATS_NUM_BW_COUNTERS, "\n");
+	}
+
+	for (j = 0; j < HTT_TX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES; j++) {
+		len += scnprintf(buf + len, buf_len - len, j == 0 ?
+				 "half_ax_mu_mimo_tx_bw = " :"quarter_ax_mu_mimo_tx_bw = ");
+		PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->reduced_ax_mu_mimo_tx_bw[j], NULL,
+				   HTT_TX_PDEV_STATS_NUM_BW_COUNTERS, "\n");
+	}
+
+	for (j = 0; j < HTT_TX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES; j++) {
+		len += scnprintf(buf + len, buf_len - len, j == 0 ?
+				 "half_ofdma_tx_bw" :"quarter_ofdma_tx_bw = ");
+		PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->reduced_ax_mu_ofdma_tx_bw[j], NULL,
+				   HTT_TX_PDEV_STATS_NUM_BW_COUNTERS, "\n");
+	}
+
+	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->ofdma_he_sig_b_mcs,
+			   "ofdma_he_sig_b_mcs",
+			   HTT_TX_PDEV_STATS_NUM_HE_SIG_B_MCS_COUNTERS, "\n");
+
+	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->trigger_type_11ax,
+			   "11ax_trigger_type",
+			   HTT_TX_PDEV_STATS_NUM_11AX_TRIGGER_TYPES, "\n");
+
+	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->trigger_type_11be,
+			   "11be_trigger_type",
+			   HTT_TX_PDEV_STATS_NUM_11BE_TRIGGER_TYPES, "\n");
+
+	len += scnprintf(buf + len, buf_len - len,
+			 "ax_su_embedded_trigger_data_ppdu_cnt = %u\n",
+			 htt_stats_buf->ax_su_embedded_trigger_data_ppdu);
+
+	len += scnprintf(buf + len, buf_len - len,
+			 "ax_su_embedded_trigger_data_ppdu_err_cnt = %u\n",
+			 htt_stats_buf->ax_su_embedded_trigger_data_ppdu_err);
 
 	stats_req->buf_len = len;
 fail:
@@ -3491,7 +3543,7 @@ static inline void htt_print_rx_pdev_rat
 			 htt_stats_buf->rssi_mgmt_in_dbm);
 
 	for (j = 0; j < HTT_RX_PDEV_STATS_NUM_SPATIAL_STREAMS; j++) {
-		len += scnprintf(buf + len, buf_len - len, "\nrssi_chain_ext[%u] = ", j);
+		len += scnprintf(buf + len, buf_len - len, "rssi_chain_ext[%u] = ", j);
 		PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->rssi_chain_ext[j],
 				   NULL, HTT_RX_PDEV_STATS_NUM_BW_EXT_COUNTERS, "\n");
 	}
@@ -3515,7 +3567,7 @@ static inline void htt_print_rx_pdev_rat
 			   "rx_stbc_ext", HTT_RX_PDEV_STATS_NUM_MCS_COUNTERS_EXT, "\n");
 
 	for (j = 0; j < HTT_RX_PDEV_STATS_NUM_GI_COUNTERS; j++) {
-		len += scnprintf(buf + len, buf_len - len, "\nrx_gi_ext[%u] = ", j);
+		len += scnprintf(buf + len, buf_len - len, "rx_gi_ext[%u] = ", j);
 		PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->rx_gi_ext[j],
 				   NULL, HTT_RX_PDEV_STATS_NUM_MCS_COUNTERS_EXT, "\n");
 	}
@@ -3526,7 +3578,7 @@ static inline void htt_print_rx_pdev_rat
 
 	for (j = 0; j < HTT_RX_PDEV_STATS_NUM_GI_COUNTERS; j++) {
 		len += scnprintf(buf + len, buf_len - len,
-				 "\nul_ofdma_rx_gi_ext[%u] = ", j);
+				 "ul_ofdma_rx_gi_ext[%u] = ", j);
 		PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->ul_ofdma_rx_gi_ext[j],
 				   NULL, HTT_RX_PDEV_STATS_NUM_MCS_COUNTERS_EXT, "\n");
 	}
@@ -3549,8 +3601,8 @@ static inline void htt_print_rx_pdev_rat
 
 	for (j = 0; j < HTT_RX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES; j++) {
 		len += scnprintf(buf + len, buf_len - len, j == 0 ?
-				 "\nhalf_rx_bw = " :
-				 "\nquarter_rx_bw = ");
+				 "half_rx_bw = " :
+				 "quarter_rx_bw = ");
 		PRINT_ARRAY_TO_BUF(buf, len,
 				   htt_stats_buf->reduced_rx_bw[j],
 				   NULL, HTT_RX_PDEV_STATS_NUM_BW_COUNTERS, "\n");
@@ -3558,7 +3610,23 @@ static inline void htt_print_rx_pdev_rat
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->rx_su_punctured_mode,
 			   "rx_su_punctured_mode",
-			   HTT_RX_PDEV_STATS_NUM_PUNCTURED_MODE_COUNTERS, "\n\n");
+			   HTT_RX_PDEV_STATS_NUM_PUNCTURED_MODE_COUNTERS, "\n");
+
+	for (j = 0; j < HTT_RX_PDEV_STATS_NUM_SPATIAL_STREAMS; j++) {
+		len += scnprintf(buf + len, buf_len - len,
+				 "rssi_chain_ext_2[%u] = ",j);
+		PRINT_ARRAY_TO_BUF(buf, len,
+				   htt_stats_buf->rssi_chain_ext_2[j],
+				   NULL, HTT_RX_PDEV_STATS_NUM_BW_EXT_2_COUNTERS, "\n");
+	}
+
+	for (j = 0; j < HTT_RX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES; j++) {
+		len += scnprintf(buf + len, buf_len - len,
+				 "rx_per_chain_rssi_ext_2_in_dbm[%u] = ", j);
+		PRINT_ARRAY_TO_BUF(buf, len,
+				   htt_stats_buf->rx_per_chain_rssi_ext_2_in_dbm[j],
+				   NULL, HTT_RX_PDEV_STATS_NUM_BW_EXT_2_COUNTERS, "\n");
+	}
 
 	stats_req->buf_len = len;
 }
@@ -4269,7 +4337,7 @@ htt_print_tx_pdev_be_rate_stats_tlv(cons
 
 	len += scnprintf(buf + len, buf_len - len,
 			 "HTT_TX_PDEV_BE_RATE_STATS_TLV:\n");
-	len += scnprintf(buf + len, buf_len - len, "be_mu_mimo_tx_ldpc = %u\n",
+	len += scnprintf(buf + len, buf_len - len, "be_mu_mimo_tx_ldpc = %u",
 			 htt_stats_buf->be_mu_mimo_tx_ldpc);
 
 	/* MCS -2 and -1 will be printed first */
@@ -4279,21 +4347,21 @@ htt_print_tx_pdev_be_rate_stats_tlv(cons
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->be_mu_mimo_tx_mcs,
 			   "be_mu_mimo_tx_mcs",
-			   HTT_TX_PDEV_STATS_NUM_BE_MCS_COUNTERS, "\n\n");
+			   HTT_TX_PDEV_STATS_NUM_BE_MCS_COUNTERS, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->be_mu_mimo_tx_nss,
 			   "be_mu_mimo_tx_nss",
-			   HTT_TX_PDEV_STATS_NUM_SPATIAL_STREAMS, "\n\n");
+			   HTT_TX_PDEV_STATS_NUM_SPATIAL_STREAMS, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->be_mu_mimo_tx_bw,
 			   "be_mu_mimo_tx_bw",
-			   HTT_TX_PDEV_STATS_NUM_BE_BW_COUNTERS, "\n\n");
+			   HTT_TX_PDEV_STATS_NUM_BE_BW_COUNTERS, "\n");
 
 	for (j = 0; j < HTT_TX_PDEV_STATS_NUM_GI_COUNTERS; j++) {
-		PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->be_mu_mimo_tx_gi[j],
-				   "NULL", HTT_TX_PDEV_STATS_NUM_BE_MCS_COUNTERS, "\n\n");
 		len += scnprintf(buf + len, buf_len - len,
 				 "be_mu_mimo_tx_gi[%u] = %s ", j, tx_gi[j]);
+		PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->be_mu_mimo_tx_gi[j],
+				   NULL, HTT_TX_PDEV_STATS_NUM_BE_MCS_COUNTERS, "\n");
 	}
 
 	if (len >= buf_len)
@@ -4382,7 +4450,7 @@ htt_print_ul_mumimo_trig_be_stats(const
 			htt_ul_mumimo_trig_be_stats_buf->be_ul_mumimo_rx_gi[j][HTT_RX_PDEV_STATS_NUM_BE_MCS_COUNTERS-1]);
 
 		PRINT_ARRAY_TO_BUF(buf, len, htt_ul_mumimo_trig_be_stats_buf->be_ul_mumimo_rx_gi[j],
-				   "NULL", HTT_RX_PDEV_STATS_NUM_BE_MCS_COUNTERS-2, "\n\n");
+				   NULL, HTT_RX_PDEV_STATS_NUM_BE_MCS_COUNTERS-2, "\n\n");
 
 		len += scnprintf(buf + len, buf_len - len,
 				 "be_ul_mumimo_rx_gi[%u] = %s ", j, rx_gi[j]);
@@ -4406,7 +4474,7 @@ htt_print_ul_mumimo_trig_be_stats(const
 	for (i = 0; i < HTT_RX_PDEV_STATS_ULMUMIMO_NUM_SPATIAL_STREAMS; i++) {
 		PRINT_ARRAY_TO_BUF(buf, len,
 				   htt_ul_mumimo_trig_be_stats_buf->be_rx_ul_mumimo_chain_rssi_in_dbm[i],
-				   "NULL", HTT_RX_PDEV_STATS_NUM_BE_BW_COUNTERS, "\n\n");
+				   NULL, HTT_RX_PDEV_STATS_NUM_BE_BW_COUNTERS, "\n\n");
 		len += scnprintf(buf + len, buf_len - len,
 				 "be_rx_ul_mumimo_rssi_in_dbm: chain[%u] = %s ",
 				 i, htt_ul_mumimo_trig_be_stats_buf->be_rx_ul_mumimo_chain_rssi_in_dbm[i]);
@@ -4415,7 +4483,7 @@ htt_print_ul_mumimo_trig_be_stats(const
 	for (i = 0; i < HTT_RX_PDEV_MAX_ULMUMIMO_NUM_USER; i++) {
 		PRINT_ARRAY_TO_BUF(buf, len,
 				   htt_ul_mumimo_trig_be_stats_buf->be_rx_ul_mumimo_target_rssi[i],
-				   "NULL", HTT_RX_PDEV_STATS_NUM_BE_BW_COUNTERS, "\n\n");
+				   NULL, HTT_RX_PDEV_STATS_NUM_BE_BW_COUNTERS, "\n\n");
 		len += scnprintf(buf + len, buf_len - len,
 				 "be_rx_ul_mumimo_target_rssi: user[%u] = %s ",
 				 i, htt_ul_mumimo_trig_be_stats_buf->be_rx_ul_mumimo_target_rssi[i]);
@@ -4424,7 +4492,7 @@ htt_print_ul_mumimo_trig_be_stats(const
 	for (i = 0; i < HTT_RX_PDEV_MAX_ULMUMIMO_NUM_USER; i++) {
 		PRINT_ARRAY_TO_BUF(buf, len,
 				htt_ul_mumimo_trig_be_stats_buf->be_rx_ul_mumimo_fd_rssi[i],
-				"NULL", HTT_RX_PDEV_STATS_ULMUMIMO_NUM_SPATIAL_STREAMS, "\n\n");
+				NULL, HTT_RX_PDEV_STATS_ULMUMIMO_NUM_SPATIAL_STREAMS, "\n\n");
 		len += scnprintf(buf + len, buf_len - len,
 				 "be_rx_ul_mumimo_fd_rssi: user[%u] = %s ",
 				 i, htt_ul_mumimo_trig_be_stats_buf->be_rx_ul_mumimo_fd_rssi[i]);
@@ -4433,7 +4501,7 @@ htt_print_ul_mumimo_trig_be_stats(const
 	for (i = 0; i < HTT_RX_PDEV_MAX_ULMUMIMO_NUM_USER; i++) {
 		PRINT_ARRAY_TO_BUF(buf, len,
 				htt_ul_mumimo_trig_be_stats_buf->be_rx_ulmumimo_pilot_evm_dB_mean[i],
-				"NULL", HTT_RX_PDEV_STATS_ULMUMIMO_NUM_SPATIAL_STREAMS, "\n\n");
+				NULL, HTT_RX_PDEV_STATS_ULMUMIMO_NUM_SPATIAL_STREAMS, "\n\n");
 		len += scnprintf(buf + len, buf_len - len,
 				 "be_rx_ulmumimo_pilot_evm_dB_mean: user [%u] = %s ",
 				 i, htt_ul_mumimo_trig_be_stats_buf->be_rx_ulmumimo_pilot_evm_dB_mean[i]);
@@ -4473,24 +4541,25 @@ htt_print_be_ul_ofdma_trigger_stats(cons
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_trigger_stats_buf->be_ul_ofdma_rx_mcs,
 			   "be_ul_ofdma_rx_mcs",
-			   HTT_RX_PDEV_STATS_NUM_BE_MCS_COUNTERS, "\n\n");
+			   HTT_RX_PDEV_STATS_NUM_BE_MCS_COUNTERS, "\n");
 
 	for (j = 0; j < HTT_RX_PDEV_STATS_NUM_GI_COUNTERS; j++) {
+		len += scnprintf(buf + len, buf_len - len,
+				 "be_ul_ofdma_rx_gi[%u] = %s ", j, rx_gi[j]);
 		for (i = 0; i < HTT_RX_PDEV_STATS_NUM_BE_MCS_COUNTERS; i++) {
-			len += scnprintf(buf + len, buf_len - len, " %u:%u\n", i,
+			len += scnprintf(buf + len, buf_len - len, " %u:%u", i,
 					 htt_trigger_stats_buf->be_ul_ofdma_rx_gi[j][i]);
 		}
-		len += scnprintf(buf + len, buf_len - len,
-				 "be_ul_ofdma_rx_gi[%u] = %s ", j, rx_gi[j]);
+		len += scnprintf(buf + len, buf_len - len, "\n");
 	}
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_trigger_stats_buf->be_ul_ofdma_rx_nss,
 			   "be_ul_ofdma_rx_nss",
-			   HTT_RX_PDEV_STATS_NUM_SPATIAL_STREAMS, "\n\n");
+			   HTT_RX_PDEV_STATS_NUM_SPATIAL_STREAMS, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_trigger_stats_buf->be_ul_ofdma_rx_bw,
 			   "be_ul_ofdma_rx_bw",
-			   HTT_RX_PDEV_STATS_NUM_BE_BW_COUNTERS, "\n\n");
+			   HTT_RX_PDEV_STATS_NUM_BE_BW_COUNTERS, "\n");
 
 	len += scnprintf(buf + len, buf_len - len, "be_ul_ofdma_rx_stbc = %u\n",
 			htt_trigger_stats_buf->be_ul_ofdma_rx_stbc);
@@ -4499,27 +4568,27 @@ htt_print_be_ul_ofdma_trigger_stats(cons
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_trigger_stats_buf->be_rx_ulofdma_data_ru_size_ppdu,
 			   "be_rx_ulofdma_data_ru_size_ppdu",
-			   HTT_RX_PDEV_STATS_NUM_BE_RU_SIZE_COUNTERS, "\n\n");
+			   HTT_RX_PDEV_STATS_NUM_BE_RU_SIZE_COUNTERS, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_trigger_stats_buf->be_rx_ulofdma_non_data_ru_size_ppdu,
 			   "be_rx_ulofdma_non_data_ru_size_ppdu",
-			   HTT_RX_PDEV_STATS_NUM_BE_RU_SIZE_COUNTERS, "\n\n");
+			   HTT_RX_PDEV_STATS_NUM_BE_RU_SIZE_COUNTERS, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_trigger_stats_buf->be_uplink_sta_aid,
 			   "be_rx_rssi_track_sta_aid",
-			   HTT_RX_UL_MAX_UPLINK_RSSI_TRACK, "\n\n");
+			   HTT_RX_UL_MAX_UPLINK_RSSI_TRACK, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_trigger_stats_buf->be_uplink_sta_target_rssi,
 			   "be_rx_sta_target_rssi",
-			   HTT_RX_UL_MAX_UPLINK_RSSI_TRACK, "\n\n");
+			   HTT_RX_UL_MAX_UPLINK_RSSI_TRACK, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_trigger_stats_buf->be_uplink_sta_fd_rssi,
 			   "be_uplink_sta_fd_rssi",
-			   HTT_RX_UL_MAX_UPLINK_RSSI_TRACK, "\n\n");
+			   HTT_RX_UL_MAX_UPLINK_RSSI_TRACK, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_trigger_stats_buf->be_uplink_sta_power_headroom,
 			   "be_rx_sta_power_headroom",
-			   HTT_RX_UL_MAX_UPLINK_RSSI_TRACK, "\n\n");
+			   HTT_RX_UL_MAX_UPLINK_RSSI_TRACK, "\n");
 
 	len += scnprintf(buf + len, buf_len - len, "\n");
 
@@ -4608,24 +4677,33 @@ htt_print_tx_pdev_rate_stats_be_ofdma_tl
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->be_ofdma_tx_mcs,
 			   "be_ofdma_tx_mcs",
-			   HTT_TX_PDEV_STATS_NUM_BE_MCS_COUNTERS, "\n\n");
+			   HTT_TX_PDEV_STATS_NUM_BE_MCS_COUNTERS, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->be_ofdma_tx_nss,
 			   "be_ofdma_tx_nss",
-			   HTT_TX_PDEV_STATS_NUM_SPATIAL_STREAMS, "\n\n");
+			   HTT_TX_PDEV_STATS_NUM_SPATIAL_STREAMS, "\n");
 
 	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->be_ofdma_tx_bw,
 			   "be_ofdma_tx_bw",
-			   HTT_TX_PDEV_STATS_NUM_BW_COUNTERS, "\n\n");
+			   HTT_TX_PDEV_STATS_NUM_BW_COUNTERS, "\n");
+
+	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->be_ofdma_eht_sig_mcs,
+			   "be_ofdma_eht_sig_mcs",
+			   HTT_TX_PDEV_STATS_NUM_EHT_SIG_MCS_COUNTERS, "\n");
+
+	PRINT_ARRAY_TO_BUF(buf, len, htt_stats_buf->be_ofdma_tx_ru_size,
+			   "be_ofdma_tx_ru_size",
+			   HTT_TX_PDEV_STATS_NUM_BE_RU_SIZE_COUNTERS, "\n");
 
 	for (j = 0; j < HTT_TX_PDEV_STATS_NUM_GI_COUNTERS; j++) {
+		len += scnprintf(buf + len, buf_len - len,
+				 "be_ofdma_tx_gi[%u] = %s ", j, tx_gi[j]);
 		for (i = 0; i < HTT_TX_PDEV_STATS_NUM_BE_MCS_COUNTERS; i++) {
 			len += scnprintf(buf + len, buf_len - len,
 					" %u:%u,", i,
 					htt_stats_buf->be_ofdma_tx_gi[j][i]);
 		}
-		len += scnprintf(buf + len, buf_len - len,
-				 "be_ofdma_tx_gi[%u] = %s ", j, tx_gi[j]);
+		len += scnprintf(buf + len, buf_len - len, "\n");
 	}
 
 	stats_req->buf_len = len;
Index: backports-20220404-5.4.164-f40abb4788/drivers/net/wireless/ath/ath12k/debugfs_htt_stats.h
===================================================================
--- backports-20220404-5.4.164-f40abb4788.orig/drivers/net/wireless/ath/ath12k/debugfs_htt_stats.h	2022-11-19 15:18:55.874265141 +0530
+++ backports-20220404-5.4.164-f40abb4788/drivers/net/wireless/ath/ath12k/debugfs_htt_stats.h	2022-11-19 15:18:55.870265132 +0530
@@ -1555,6 +1555,7 @@ enum HTT_TX_PDEV_STATS_NUM_PUNCTURED_MOD
 /* 11be related updates */
 #define HTT_TX_PDEV_STATS_NUM_BE_MCS_COUNTERS 16 /* 0...13,-2,-1 */
 #define HTT_TX_PDEV_STATS_NUM_BE_BW_COUNTERS  5  /* 20,40,80,160,320 MHz */
+#define HTT_TX_PDEV_STATS_NUM_11BE_TRIGGER_TYPES 6
 
 #define HTT_TX_PDEV_STATS_NUM_HE_SIG_B_MCS_COUNTERS 6
 #define HTT_TX_PDEV_STATS_NUM_EHT_SIG_MCS_COUNTERS 4
@@ -1680,6 +1681,23 @@ struct htt_tx_pdev_rate_stats_tlv {
 	u32 tx_gi_ext_2[HTT_TX_PDEV_STATS_NUM_GI_COUNTERS]
 		       [HTT_TX_PDEV_STATS_NUM_EXTRA2_MCS_COUNTERS];
 	u32 tx_su_punctured_mode[HTT_TX_PDEV_STATS_NUM_PUNCTURED_MODE_COUNTERS];
+	u32 reduced_tx_bw[HTT_TX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES][HTT_TX_PDEV_STATS_NUM_BW_COUNTERS];
+	/** 11AC VHT DL MU MIMO TX BW stats at reduced channel config */
+	u32 reduced_ac_mu_mimo_tx_bw[HTT_TX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES][HTT_TX_PDEV_STATS_NUM_BW_COUNTERS];
+	/** 11AX HE DL MU MIMO TX BW stats at reduced channel config */
+	u32 reduced_ax_mu_mimo_tx_bw[HTT_TX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES][HTT_TX_PDEV_STATS_NUM_BW_COUNTERS];
+	/** 11AX HE DL MU OFDMA TX BW stats at reduced channel config */
+	u32 reduced_ax_mu_ofdma_tx_bw[HTT_TX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES][HTT_TX_PDEV_STATS_NUM_BW_COUNTERS];
+	/** 11AX HE DL MU OFDMA TX RU Size stats */
+	u32 ofdma_tx_ru_size[HTT_TX_PDEV_STATS_NUM_AX_RU_SIZE_COUNTERS];
+	/** 11AX HE DL MU OFDMA HE-SIG-B MCS stats */
+	u32 ofdma_he_sig_b_mcs[HTT_TX_PDEV_STATS_NUM_HE_SIG_B_MCS_COUNTERS];
+	/** 11AX HE SU data + embedded trigger PPDU success stats (stats for HETP ack success PPDU cnt) */
+	u32 ax_su_embedded_trigger_data_ppdu;
+	/** 11AX HE SU data + embedded trigger PPDU failure stats (stats for HETP ack failure PPDU cnt) */
+	u32 ax_su_embedded_trigger_data_ppdu_err;
+	/** sta side trigger stats */
+	u32 trigger_type_11be[HTT_TX_PDEV_STATS_NUM_11BE_TRIGGER_TYPES];
 };
 
 /* == PDEV RX RATE CTRL STATS == */
@@ -1705,6 +1723,7 @@ struct htt_tx_pdev_rate_stats_tlv {
 #define HTT_RX_PDEV_MAX_ULMUMIMO_NUM_USER 8
 #define HTT_RX_PDEV_STATS_NUM_BE_MCS_COUNTERS 16 /* 0-13, -2, -1 */
 #define HTT_RX_PDEV_STATS_NUM_BE_BW_COUNTERS  5  /* 20,40,80,160,320 MHz */
+#define HTT_RX_PDEV_STATS_NUM_BW_EXT_2_COUNTERS 8
 
 /* HTT_RX_PDEV_STATS_NUM_RU_SIZE_COUNTERS:
  * RU size index 0: HTT_UL_OFDMA_V0_RU_SIZE_RU_26
@@ -1874,6 +1893,9 @@ struct htt_rx_pdev_rate_ext_stats_tlv {
 		       [HTT_RX_PDEV_STATS_NUM_EXTRA2_MCS_COUNTERS];
 	u32 rx_su_punctured_mode[HTT_RX_PDEV_STATS_NUM_PUNCTURED_MODE_COUNTERS];
 	u32 reduced_rx_bw[HTT_RX_PDEV_STATS_NUM_REDUCED_CHAN_TYPES][HTT_RX_PDEV_STATS_NUM_BW_COUNTERS];
+	u8 rssi_chain_ext_2[HTT_RX_PDEV_STATS_NUM_SPATIAL_STREAMS][HTT_RX_PDEV_STATS_NUM_BW_EXT_2_COUNTERS];
+	s8 rx_per_chain_rssi_ext_2_in_dbm[HTT_RX_PDEV_STATS_NUM_SPATIAL_STREAMS]
+					 [HTT_RX_PDEV_STATS_NUM_BW_EXT_2_COUNTERS];
 };
 
 /* == RX PDEV/SOC STATS == */
