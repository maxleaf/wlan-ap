From 8476c31ebf9f005a552e65ba35d393eb018c71cc Mon Sep 17 00:00:00 2001
From: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
Date: Tue, 25 Jan 2022 20:31:19 -0800
Subject: [PATCH] ath12k: update htt_tx_wbm_completion descriptor to version 3

QCN9224 uses htt descriptor version 3 for htt_tx_wbm_completion.

Signed-off-by: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp.h       | 11 +++++++----
 drivers/net/wireless/ath/ath12k/dp_tx.c    | 12 +++++++-----
 drivers/net/wireless/ath/ath12k/hal_desc.h |  3 ++-
 3 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp.h b/drivers/net/wireless/ath/ath12k/dp.h
index 77ac536e06aa..c35901369142 100644
--- a/drivers/net/wireless/ath/ath12k/dp.h
+++ b/drivers/net/wireless/ath/ath12k/dp.h
@@ -409,17 +409,20 @@ struct ath12k_dp {
 #define HTT_TX_WBM_COMP_STATUS_OFFSET 8
 
 /* HTT tx completion is overlayed in wbm_release_ring */
-#define HTT_TX_WBM_COMP_INFO0_STATUS		GENMASK(12, 9)
-#define HTT_TX_WBM_COMP_INFO0_REINJECT_REASON	GENMASK(16, 13)
-#define HTT_TX_WBM_COMP_INFO0_REINJECT_REASON	GENMASK(16, 13)
+#define HTT_TX_WBM_COMP_INFO0_STATUS		GENMASK(16, 13)
+#define HTT_TX_WBM_COMP_INFO1_REINJECT_REASON	GENMASK(3, 0)
+#define HTT_TX_WBM_COMP_INFO1_EXCEPTION_FRAME	BIT(4)
 
-#define HTT_TX_WBM_COMP_INFO1_ACK_RSSI		GENMASK(31, 24)
+#define HTT_TX_WBM_COMP_INFO2_ACK_RSSI		GENMASK(31, 24)
 
 struct htt_tx_wbm_completion {
+	u32 rsvd0[2];
 	u32 info0;
 	u32 info1;
 	u32 info2;
 	u32 info3;
+	u32 info4;
+	u32 rsvd1;
 } __packed;
 
 enum htt_h2t_msg_type {
diff --git a/drivers/net/wireless/ath/ath12k/dp_tx.c b/drivers/net/wireless/ath/ath12k/dp_tx.c
index f3309dca4c70..ebb1358c02c8 100644
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -411,8 +411,8 @@ ath12k_dp_tx_process_htt_tx_complete(struct ath12k_base *ab,
 	case HAL_WBM_REL_HTT_TX_COMP_STATUS_DROP:
 	case HAL_WBM_REL_HTT_TX_COMP_STATUS_TTL:
 		ts.acked = (wbm_status == HAL_WBM_REL_HTT_TX_COMP_STATUS_OK);
-		ts.ack_rssi = FIELD_GET(HTT_TX_WBM_COMP_INFO1_ACK_RSSI,
-					status_desc->info1);
+		ts.ack_rssi = FIELD_GET(HTT_TX_WBM_COMP_INFO2_ACK_RSSI,
+					status_desc->info2);
 		ath12k_dp_tx_htt_tx_complete_buf(ab, msdu, tx_ring, &ts);
 		break;
 	case HAL_WBM_REL_HTT_TX_COMP_STATUS_REINJ:
@@ -544,6 +544,8 @@ static inline void ath12k_dp_tx_status_parse(struct ath12k_base *ab,
 	if (ts->buf_rel_source == HAL_WBM_REL_SRC_MODULE_FW)
 		return;
 
+	ts->status = FIELD_GET(HAL_WBM_COMPL_TX_INFO0_TQM_RELEASE_REASON,
+			       desc->info0);
 	ts->ppdu_id = FIELD_GET(HAL_WBM_COMPL_TX_INFO1_TQM_STATUS_NUMBER,
 				desc->info1);
 	if (desc->rate_stats.info0 & HAL_TX_RATE_STATS_INFO0_VALID)
@@ -600,12 +602,12 @@ void ath12k_dp_tx_completion_handler(struct ath12k_base *ab, int ring_id)
 		if (FIELD_GET(HAL_WBM_COMPL_TX_INFO0_CC_DONE, tx_status->info0)) {
 			/* HW done cookie conversion */
 			tx_desc = (struct ath12k_tx_desc_info *)
-					(tx_status->buf_addr_info.info0 |
-					(((u64)tx_status->buf_addr_info.info1) << 32));
+					(tx_status->buf_va_lo |
+					(((u64)tx_status->buf_va_hi) << 32));
 		} else {
 			/* SW does cookie conversion to VA */
 			desc_id = FIELD_GET(BUFFER_ADDR_INFO1_SW_COOKIE,
-					    tx_status->buf_addr_info.info1);
+					    tx_status->buf_va_hi);
 
 			tx_desc = ath12k_dp_get_tx_desc(ab, desc_id);
 		}
diff --git a/drivers/net/wireless/ath/ath12k/hal_desc.h b/drivers/net/wireless/ath/ath12k/hal_desc.h
index d6cb39500fc7..b930c22a3ebd 100644
--- a/drivers/net/wireless/ath/ath12k/hal_desc.h
+++ b/drivers/net/wireless/ath/ath12k/hal_desc.h
@@ -1882,7 +1882,8 @@ struct hal_wbm_completion_ring_rx {
 #define HAL_WBM_COMPL_TX_INFO3_LOOPING_COUNT		GENMASK(31, 28)
 
 struct hal_wbm_completion_ring_tx {
-	struct ath12k_buffer_addr buf_addr_info;
+	u32 buf_va_lo;
+	u32 buf_va_hi;
 	u32 info0;
 	u32 info1;
 	u32 info2;
-- 
2.17.1

