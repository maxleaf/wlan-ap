From 7d770f00cd71b6619d798194dc2105a3a1234f14 Mon Sep 17 00:00:00 2001
From: Balamurugan Mahalingam <quic_bmahalin@quicinc.com>
Date: Tue, 22 Nov 2022 01:03:29 -0800
Subject: [PATCH 4/6] ath12k: Avoid initialization of all the variables early
 in the function

Intializing all the variables takes cpu. Avoid it earlier in the function
and initialize it just before use. All the variables do not need to be
initialized to enter fast xmit path

Signed-off-by: Balamurugan Mahalingam <quic_bmahalin@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_tx.c |  7 ++---
 drivers/net/wireless/ath/ath12k/mac.c   | 35 ++++++++++++++++++-------
 2 files changed, 29 insertions(+), 13 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -111,14 +111,14 @@ static void ath12k_hal_tx_cmd_ext_desc_s
 int ath12k_dp_tx_direct(struct ath12k_vif *arvif, struct sk_buff *skb)
 {
 	struct ath12k *ar = arvif->ar;
-	struct ath12k_base *ab = arvif->ar->ab;
+	struct ath12k_base *ab = ar->ab;
 	struct ath12k_dp *dp = &ab->dp;
 	struct ath12k_tx_desc_info *tx_desc = NULL;
 	struct ath12k_skb_cb *skb_cb = ATH12K_SKB_CB(skb);
 	struct hal_srng *tcl_ring;
 	struct dp_tx_ring *tx_ring;
 	void *hal_tcl_desc;
-	struct hal_tcl_data_cmd tcl_desc = { 0 };
+	struct hal_tcl_data_cmd tcl_desc;
 	u8 hal_ring_id, ring_id;
 	int ret;
 
@@ -171,6 +171,7 @@ int ath12k_dp_tx_direct(struct ath12k_vi
 		tcl_desc.info2 |= TX_IP_CHECKSUM;
 	tcl_desc.info3 = arvif->desc.info3;
 	tcl_desc.info4 =  arvif->desc.info4;
+	tcl_desc.info5 = 0;
 	memcpy(hal_tcl_desc, &tcl_desc, sizeof(tcl_desc));
 	dsb(st);
 	ath12k_hal_srng_access_umac_src_ring_end_nolock(ab->mem, tcl_ring);
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -6844,25 +6844,30 @@ static void ath12k_mac_op_tx(struct ieee
 			     struct ieee80211_tx_control *control,
 			     struct sk_buff *skb)
 {
-	struct ath12k_skb_cb *skb_cb = ATH12K_SKB_CB(skb);
-	struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
-	struct ieee80211_vif *vif = info->control.vif;
-	struct ath12k_vif *arvif = ath12k_vif_to_arvif(vif);
-	struct ath12k *ar = arvif->ar;
-	struct ath12k_hw *ah = ar->ah;
-	struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
-	struct ieee80211_key_conf *key = info->control.hw_key;
-	struct ath12k_mgmt_frame_stats *mgmt_stats = &arvif->mgmt_stats;
+	struct ath12k_skb_cb *skb_cb;
+	struct ieee80211_tx_info *info;
+	struct ieee80211_vif *vif;
+	struct ath12k_vif *arvif;
+	struct ath12k *ar;
+	struct ath12k_hw *ah;
+	struct ieee80211_hdr *hdr;
+	struct ieee80211_key_conf *key;
+	struct ath12k_mgmt_frame_stats *mgmt_stats;
 	struct ath12k_sta *arsta = NULL;
 	struct ieee80211_sta *sta = NULL;
-	u32 info_flags = info->flags;
+	u32 info_flags;
 	bool is_prb_rsp;
 	u16 frm_type = 0;
 	int ret;
 
+	info = IEEE80211_SKB_CB(skb);
+	vif = info->control.vif;
+	arvif = ath12k_vif_to_arvif(vif);
+
 	if (skb->fast_xmit) {
 		ret = ath12k_dp_tx_direct(arvif, skb);
 		if (unlikely(ret)) {
+			ar = arvif->ar;
 			ath12k_warn(ar->ab, "failed to transmit frame %d\n",
 				    ret);
 			dev_kfree_skb_any(skb);
@@ -6873,6 +6878,9 @@ static void ath12k_mac_op_tx(struct ieee
 	if (control)
 		sta = control->sta;
 
+	ar = arvif->ar;
+	ah = ar->ah;
+
 	if (arvif->vdev_type == WMI_VDEV_TYPE_MONITOR) {
 		ieee80211_free_txskb(ah->hw, skb);
 		return;
@@ -6883,6 +6891,8 @@ static void ath12k_mac_op_tx(struct ieee
 		return;
 	}
 
+	skb_cb = ATH12K_SKB_CB(skb);
+	key = info->control.hw_key;
 	memset(skb_cb, 0, sizeof(*skb_cb));
 	skb_cb->vif = vif;
 
@@ -6891,11 +6901,16 @@ static void ath12k_mac_op_tx(struct ieee
 		skb_cb->flags |= ATH12K_SKB_CIPHER_SET;
 	}
 
+	hdr = (struct ieee80211_hdr *)skb->data;
+
+	info_flags = info->flags;
 	if (info_flags & IEEE80211_TX_CTL_HW_80211_ENCAP) {
 		skb_cb->flags |= ATH12K_SKB_HW_80211_ENCAP;
 	} else if (ieee80211_is_mgmt(hdr->frame_control)) {
 		frm_type = FIELD_GET(IEEE80211_FCTL_STYPE, hdr->frame_control);
 		is_prb_rsp = ieee80211_is_probe_resp(hdr->frame_control);
+
+		mgmt_stats = &arvif->mgmt_stats;
 		ret = ath12k_mac_mgmt_tx(ar, skb, is_prb_rsp);
 		if (ret) {
 			if (ret != -EBUSY)
