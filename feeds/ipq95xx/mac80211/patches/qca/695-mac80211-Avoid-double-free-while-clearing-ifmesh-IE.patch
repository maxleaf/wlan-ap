From 60cf6b32eea4792913db2793fb471505d309eeb3 Mon Sep 17 00:00:00 2001
From: Manish Dharanenthiran <quic_mdharane@quicinc.com>
Date: Sat, 19 Nov 2022 23:08:20 +0530
Subject: [PATCH] mac80211: Avoid double free while clearing ifmesh IE

While Mesh VAP is siwtched up, join_mesh will be
called to setup the IE. In this case, the old_ie
will be freed before assigning the new_ie to the
struct. But, Mesh IE will already be freed during
leave mesh which is called during VAP down cases, thus
leads to double free

Fix this by removing free in copy setup and assign
NULL after free in leave_mesh caller.

Signed-off-by: Manish Dharanenthiran <quic_mdharane@quicinc.com>
---
 net/mac80211/cfg.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/net/mac80211/cfg.c b/net/mac80211/cfg.c
index aae7f09..8fb8458 100644
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -2412,14 +2412,12 @@ static int copy_mesh_setup(struct ieee80211_if_mesh *ifmsh,
 		const struct mesh_setup *setup)
 {
 	u8 *new_ie;
-	const u8 *old_ie;
 	struct ieee80211_sub_if_data *sdata = container_of(ifmsh,
 					struct ieee80211_sub_if_data, u.mesh);
 	int i;
 
 	/* allocate information elements */
 	new_ie = NULL;
-	old_ie = ifmsh->ie;
 
 	if (setup->ie_len) {
 		new_ie = kmemdup(setup->ie, setup->ie_len,
@@ -2429,7 +2427,6 @@ static int copy_mesh_setup(struct ieee80211_if_mesh *ifmsh,
 	}
 	ifmsh->ie_len = setup->ie_len;
 	ifmsh->ie = new_ie;
-	kfree(old_ie);
 
 	/* now copy the rest of the setup parameters */
 	ifmsh->mesh_id_len = setup->mesh_id_len;
@@ -2638,6 +2635,7 @@ static int ieee80211_leave_mesh(struct wiphy *wiphy, struct net_device *dev)
 	mutex_lock(&sdata->local->mtx);
 	ieee80211_vif_release_channel(sdata);
 	kfree(sdata->u.mesh.ie);
+	sdata->u.mesh.ie = NULL;
 	mutex_unlock(&sdata->local->mtx);
 
 	return 0;
-- 
2.17.1

