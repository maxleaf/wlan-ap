From 8021a05e1bd8b18602b7551ee3bfd774abf877e2 Mon Sep 17 00:00:00 2001
From: Thiraviyam Mariyappan <quic_tmariyap@quicinc.com>
Date: Tue, 13 Sep 2022 11:08:28 +0530
Subject: [PATCH] ath12k: fix 320Mhz bytes/packets counters in peer stats

For 320Mhz, Aligned the bw value as per the host data structure to update the
bytes and packets counters in peer tx/rx stats.

Signed-off-by: Thiraviyam Mariyappan <quic_tmariyap@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.h        |  2 +-
 drivers/net/wireless/ath/ath12k/debugfs_sta.c |  7 +++++--
 drivers/net/wireless/ath/ath12k/dp.h          |  2 ++
 drivers/net/wireless/ath/ath12k/dp_rx.c       |  8 +++++++-
 drivers/net/wireless/ath/ath12k/hal_rx.h      | 10 +++++-----
 5 files changed, 20 insertions(+), 9 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/debugfs_sta.c
+++ b/drivers/net/wireless/ath/ath12k/debugfs_sta.c
@@ -488,7 +488,7 @@ static ssize_t ath12k_dbg_sta_dump_rx_st
 			 rx_stats->pkt_stats.bw_count[1],
 			 rx_stats->pkt_stats.bw_count[2],
 			 rx_stats->pkt_stats.bw_count[3],
-			 rx_stats->pkt_stats.bw_count[4]);
+			 rx_stats->pkt_stats.bw_count[5]);
 	len += scnprintf(buf + len, size - len, "\nRate Table (packets):\n");
 	num_run = HAL_RX_BW_MAX * HAL_RX_GI_MAX * HAL_RX_MAX_NSS;
 
@@ -580,7 +580,7 @@ static ssize_t ath12k_dbg_sta_dump_rx_st
 			 rx_stats->byte_stats.bw_count[1],
 			 rx_stats->byte_stats.bw_count[2],
 			 rx_stats->byte_stats.bw_count[3],
-			 rx_stats->byte_stats.bw_count[4]);
+			 rx_stats->byte_stats.bw_count[5]);
 	len += scnprintf(buf + len, size - len, "\nRate Table (bytes):\n");
 
 	bw = 0;
--- a/drivers/net/wireless/ath/ath12k/dp.h
+++ b/drivers/net/wireless/ath/ath12k/dp.h
@@ -1488,6 +1488,8 @@ enum HTT_PPDU_STATS_BW {
 	HTT_PPDU_STATS_BANDWIDTH_80MHZ  = 4,
 	HTT_PPDU_STATS_BANDWIDTH_160MHZ = 5, /* includes 80+80 */
 	HTT_PPDU_STATS_BANDWIDTH_DYN    = 6,
+	HTT_PPDU_STATS_BANDWIDTH_DYN_PATTERNS = 7,
+	HTT_PPDU_STATS_BANDWIDTH_320MHZ = 8,
 };
 
 #define HTT_PPDU_STATS_CMN_FLAGS_FRAME_TYPE_M	GENMASK(7, 0)
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -1355,6 +1355,32 @@ static u32 ath12k_dp_rx_ru_alloc_from_ru
 	return width;
 }
 
+/* Align bw value as per host data structures */
+static u8 ath12k_htt_bw_to_mac_bw(u32 rate_flags)
+{
+	u8 bw = HTT_USR_RATE_BW(rate_flags);
+
+	switch (bw) {
+	case HTT_PPDU_STATS_BANDWIDTH_320MHZ:
+		bw = ATH12K_BW_320;
+		break;
+	case HTT_PPDU_STATS_BANDWIDTH_160MHZ:
+		bw = ATH12K_BW_160;
+		break;
+	case HTT_PPDU_STATS_BANDWIDTH_80MHZ:
+		bw = ATH12K_BW_80;
+		break;
+	case HTT_PPDU_STATS_BANDWIDTH_40MHZ:
+		bw = ATH12K_BW_40;
+		break;
+	default:
+		bw = ATH12K_BW_20;
+	break;
+	}
+
+	return bw;
+}
+
 static void
 ath12k_update_per_peer_tx_stats(struct ath12k *ar,
 				struct htt_ppdu_stats_info *ppdu_info, u8 user)
@@ -1424,7 +1450,7 @@ ath12k_update_per_peer_tx_stats(struct a
 	}
 
 	flags = HTT_USR_RATE_PREAMBLE(rate_flags);
-	bw = HTT_USR_RATE_BW(rate_flags) - 2;
+	bw = ath12k_htt_bw_to_mac_bw(rate_flags);
 	nss = HTT_USR_RATE_NSS(rate_flags) + 1;
 	mcs = HTT_USR_RATE_MCS(rate_flags);
 	sgi = HTT_USR_RATE_GI(rate_flags);
--- a/drivers/net/wireless/ath/ath12k/hal_rx.h
+++ b/drivers/net/wireless/ath/ath12k/hal_rx.h
@@ -61,6 +61,7 @@ enum hal_rx_bw {
 	HAL_RX_BW_40MHZ,
 	HAL_RX_BW_80MHZ,
 	HAL_RX_BW_160MHZ,
+	HAL_RX_BW_240MHZ,
 	HAL_RX_BW_320MHZ,
 	HAL_RX_BW_MAX,
 };
