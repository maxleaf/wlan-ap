From f06e590b8cee24b65dbad3259f84a457d16e303e Mon Sep 17 00:00:00 2001
From: Sivashankari Madhavan <quic_sivamadh@quicinc.com>
Date: Wed, 18 May 2022 10:24:58 +0530
Subject: [PATCH] mac80211: Add the support for Green AP

Adds the mac80211 changes for support the Green AP

Signed-off-by: Sivashankari Madhavan <quic_sivamadh@quicinc.com>
---
 drivers/net/wireless/ath/ath6kl/cfg80211.c  |  8 ++++----
 drivers/net/wireless/ath/wil6210/cfg80211.c |  9 +++++----
 include/net/mac80211.h                      |  6 +++++-
 net/mac80211/cfg.c                          | 21 ++++++++++++++++-----
 net/mac80211/debugfs.c                      |  1 +
 5 files changed, 31 insertions(+), 14 deletions(-)

Index: backports-20220404-5.4.164-f40abb4788/drivers/net/wireless/ath/ath6kl/cfg80211.c
===================================================================
--- backports-20220404-5.4.164-f40abb4788.orig/drivers/net/wireless/ath/ath6kl/cfg80211.c
+++ backports-20220404-5.4.164-f40abb4788/drivers/net/wireless/ath/ath6kl/cfg80211.c
@@ -2953,8 +2953,8 @@ static int ath6kl_start_ap(struct wiphy
 	return 0;
 }
 
-static int ath6kl_change_beacon(struct wiphy *wiphy, struct net_device *dev,
-				struct cfg80211_beacon_data *beacon)
+static int ath6kl_update_ap(struct wiphy *wiphy, struct net_device *dev,
+				struct cfg80211_ap_settings *settings)
 {
 	struct ath6kl_vif *vif = netdev_priv(dev);
 
@@ -2964,7 +2964,7 @@ static int ath6kl_change_beacon(struct w
 	if (vif->next_mode != AP_NETWORK)
 		return -EOPNOTSUPP;
 
-	return ath6kl_set_ies(vif, beacon);
+	return ath6kl_set_ies(vif, &settings->beacon);
 }
 
 static int ath6kl_stop_ap(struct wiphy *wiphy, struct net_device *dev)
@@ -3454,7 +3454,7 @@ static struct cfg80211_ops ath6kl_cfg802
 	.resume = __ath6kl_cfg80211_resume,
 #endif
 	.start_ap = ath6kl_start_ap,
-	.change_beacon = ath6kl_change_beacon,
+	.update_ap = ath6kl_update_ap,
 	.stop_ap = ath6kl_stop_ap,
 	.del_station = ath6kl_del_station,
 	.change_station = ath6kl_change_station,
Index: backports-20220404-5.4.164-f40abb4788/drivers/net/wireless/ath/wil6210/cfg80211.c
===================================================================
--- backports-20220404-5.4.164-f40abb4788.orig/drivers/net/wireless/ath/wil6210/cfg80211.c
+++ backports-20220404-5.4.164-f40abb4788/drivers/net/wireless/ath/wil6210/cfg80211.c
@@ -2081,17 +2081,18 @@ void wil_cfg80211_ap_recovery(struct wil
 	}
 }
 
-static int wil_cfg80211_change_beacon(struct wiphy *wiphy,
+static int wil_cfg80211_update_ap(struct wiphy *wiphy,
 				      struct net_device *ndev,
-				      struct cfg80211_beacon_data *bcon)
+				      struct cfg80211_ap_settings *settings)
 {
 	struct wil6210_priv *wil = wiphy_to_wil(wiphy);
 	struct wireless_dev *wdev = ndev->ieee80211_ptr;
 	struct wil6210_vif *vif = ndev_to_vif(ndev);
+	struct cfg80211_beacon_data *bcon = &settings->beacon;
 	int rc;
 	u32 privacy = 0;
 
-	wil_dbg_misc(wil, "change_beacon, mid=%d\n", vif->mid);
+	wil_dbg_misc(wil, "update_ap, mid=%d\n", vif->mid);
 	wil_print_bcon_data(bcon);
 
 	if (bcon->tail &&
@@ -2654,7 +2655,7 @@ static const struct cfg80211_ops wil_cfg
 	.del_key = wil_cfg80211_del_key,
 	.set_default_key = wil_cfg80211_set_default_key,
 	/* AP mode */
-	.change_beacon = wil_cfg80211_change_beacon,
+  	.update_ap = wil_cfg80211_update_ap,	
 	.start_ap = wil_cfg80211_start_ap,
 	.stop_ap = wil_cfg80211_stop_ap,
 	.add_station = wil_cfg80211_add_station,
Index: backports-20220404-5.4.164-f40abb4788/include/net/mac80211.h
===================================================================
--- backports-20220404-5.4.164-f40abb4788.orig/include/net/mac80211.h
+++ backports-20220404-5.4.164-f40abb4788/include/net/mac80211.h
@@ -301,7 +301,7 @@ struct ieee80211_vif_chanctx_switch {
  * @BSS_CHANGED_IDLE: Idle changed for this BSS/interface.
  * @BSS_CHANGED_SSID: SSID changed for this BSS (AP and IBSS mode)
  * @BSS_CHANGED_AP_PROBE_RESP: Probe Response changed for this BSS (AP mode)
- * @BSS_CHANGED_PS: PS changed for this BSS (STA mode)
+ * @BSS_CHANGED_PS: PS changed for this BSS (both AP and STA mode)
  * @BSS_CHANGED_TXPOWER: TX power setting changed for this interface
  * @BSS_CHANGED_P2P_PS: P2P powersave settings (CTWindow, opportunistic PS)
  *	changed
@@ -763,6 +763,7 @@ struct ieee80211_bss_conf {
 		u8 ccfs;
 		u8 present_bm;
 	} eht_oper;
+	bool ap_ps_enable;
 	bool eht_su_beamformer;
 	bool eht_su_beamformee;
 	bool eht_mu_beamformer;
@@ -2521,6 +2522,8 @@ struct ieee80211_txq {
  * @IEEE80211_HW_SUPPORTS_RX_DECAP_OFFLOAD: Hardware supports rx decapsulation
  *	offload
  *
+ * @IEEE80211_HW_SUPPORTS_AP_PS: Hardware supports AP power save.
+ *
  * @IEEE80211_HW_SUPPORTS_CONC_MON_RX_DECAP: Hardware supports concurrent rx
  *	decapsulation offload and passing raw 802.11 frames for monitor iface.
  *	If this is supported, the driver must pass both 802.3 frames for real
@@ -2589,6 +2592,7 @@ enum ieee80211_hw_flags {
 	IEEE80211_HW_SUPPORTS_NSS_OFFLOAD,
 	IEEE80211_HW_SUPPORTS_MESH_NSS_OFFLOAD,
 	IEEE80211_HW_SUPPORTS_TID_CLASS_OFFLOAD,
+	IEEE80211_HW_SUPPORTS_AP_PS,
 
 	/* keep last, obviously */
 	NUM_IEEE80211_HW_FLAGS
Index: backports-20220404-5.4.164-f40abb4788/net/mac80211/cfg.c
===================================================================
--- backports-20220404-5.4.164-f40abb4788.orig/net/mac80211/cfg.c
+++ backports-20220404-5.4.164-f40abb4788/net/mac80211/cfg.c
@@ -1466,12 +1466,12 @@ error:
 	return err;
 }
 
-static int ieee80211_change_beacon(struct wiphy *wiphy, struct net_device *dev,
+static int ieee80211_update_ap(struct wiphy *wiphy, struct net_device *dev,
 				   struct cfg80211_ap_settings *params)
 {
 	struct ieee80211_sub_if_data *sdata;
 	struct beacon_data *old;
-	int err;
+	int err = -EINVAL;
 	u32 changed;
 
 	sdata = IEEE80211_DEV_TO_SUB_IF(dev);
@@ -1487,9 +1487,20 @@ static int ieee80211_change_beacon(struc
 	if (!old)
 		return -ENOENT;
 
-	err = ieee80211_assign_beacon(sdata, &params->beacon, NULL, NULL);
-	if (err < 0)
-		return err;
+	if (params->beacon.head || params->beacon.tail) {
+		err = ieee80211_assign_beacon(sdata, &params->beacon, NULL, NULL);
+		if (err < 0)
+			return err;
+	}
+
+	if (ieee80211_hw_check(&sdata->local->hw, SUPPORTS_AP_PS) &&
+			       params->ap_ps_valid) {
+		sdata->vif.bss_conf.ap_ps_enable = params->ap_ps_enable;
+		if (err < 0)
+			err = BSS_CHANGED_PS;
+		else
+			err |= BSS_CHANGED_PS;
+	}
 
 	changed = err;
 	if (params->fils_discovery.max_interval) {
@@ -4788,7 +4799,7 @@ const struct cfg80211_ops mac80211_confi
 	.set_default_mgmt_key = ieee80211_config_default_mgmt_key,
 	.set_default_beacon_key = ieee80211_config_default_beacon_key,
 	.start_ap = ieee80211_start_ap,
-	.change_beacon = ieee80211_change_beacon,
+	.update_ap = ieee80211_update_ap,
 	.stop_ap = ieee80211_stop_ap,
 	.add_station = ieee80211_add_station,
 	.del_station = ieee80211_del_station,
Index: backports-20220404-5.4.164-f40abb4788/net/mac80211/debugfs.c
===================================================================
--- backports-20220404-5.4.164-f40abb4788.orig/net/mac80211/debugfs.c
+++ backports-20220404-5.4.164-f40abb4788/net/mac80211/debugfs.c
@@ -579,6 +579,7 @@ static const char *hw_flag_names[] = {
 	FLAG(SUPPORTS_NSS_OFFLOAD),
 	FLAG(SUPPORTS_MESH_NSS_OFFLOAD),
 	FLAG(SUPPORTS_TID_CLASS_OFFLOAD),
+	FLAG(SUPPORTS_AP_PS),
 #undef FLAG
 };
 
