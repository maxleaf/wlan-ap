From 8fd6eb3f3260700fb698a754e33e150131f5233d Mon Sep 17 00:00:00 2001
From: Johannes Berg <johannes.berg@intel.com>
Date: Thu, 13 Oct 2022 19:53:00 +0200
Subject: [PATCH] cfg80211/mac80211: reject bad MBSSID elements

Per spec, the maximum value for the MaxBSSID ('n') indicator is 8,
and the minimum is 1 since a multiple BSSID set with just one BSSID
doesn't make sense (the # of BSSIDs is limited by 2^n).
Limit this in the parsing in both cfg80211 and mac80211, rejecting
any elements with an invalid value.
This fixes potentially bad shifts in the processing of these inside
the cfg80211_gen_new_bssid() function later.
I found this during the investigation of CVE-2022-41674 fixed by the
previous patch.

(Cherry picked from commit: 8f033d2becc24aa6bfd2a5c104407963560caabc)
(Source:https://git.kernel.org/pub/scm/linux/kernel/git/wireless/wireless.git)
(Link: https://git.kernel.org/pub/scm/linux/kernel/git/wireless/
wireless.git/commit/?id=8f033d2becc24aa6bfd2a5c104407963560caabc)

Fixes: 0b8fb8235be8 ("cfg80211: Parsing of Multiple BSSID information in scanning")
Fixes: 78ac51f81532 ("mac80211: support multi-bssid")

Reviewed-by: Kees Cook <keescook@chromium.org>
Signed-off-by: Johannes Berg <johannes.berg@intel.com>
Signed-off-by: Ganesh Babu Jothiram <quic_gjothira@quicinc.com>
Change-Id: Ie6f77d9475b52c7a98cfbeefb33630303c0ed307

Signed-off-by: Ramya Gnanasekar <quic_rgnanase@quicinc.com>

diff --git a/net/mac80211/util.c b/net/mac80211/util.c
index a941725..d46a999 100644
--- a/net/mac80211/util.c
+++ b/net/mac80211/util.c
@@ -1429,6 +1429,9 @@ static size_t ieee802_11_find_bssid_profile(const u8 *start, size_t len,
 		if (elem->datalen < 2)
 			continue;
 
+		if (elem->data[0] < 1 || elem->data[0] > 8)
+			continue;
+
 		for_each_element(sub, elem->data + 1, elem->datalen - 1) {
 			u8 new_bssid[ETH_ALEN];
 			const u8 *index;
diff --git a/net/wireless/scan.c b/net/wireless/scan.c
index 7103dd3..f64ad18 100644
--- a/net/wireless/scan.c
+++ b/net/wireless/scan.c
@@ -2136,6 +2136,8 @@ static void cfg80211_parse_mbssid_data(struct wiphy *wiphy,
 	for_each_element_id(elem, WLAN_EID_MULTIPLE_BSSID, ie, ielen) {
 		if (elem->datalen < 4)
 			continue;
+		if (elem->data[0] < 1 || (int)elem->data[0] > 8)
+			continue;
 		for_each_element(sub, elem->data + 1, elem->datalen - 1) {
 			u8 profile_len;
 
-- 
2.17.1

