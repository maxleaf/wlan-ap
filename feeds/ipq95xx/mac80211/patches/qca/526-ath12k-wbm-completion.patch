From 41153ba967498b708e50b52f6c899b32d1ce11f1 Mon Sep 17 00:00:00 2001
From: Aishwarya R <quic_aisr@quicinc.com>
Date: Tue, 15 Feb 2022 16:46:18 +0530
Subject: [PATCH] ath12k wbm completion

Signed-off-by: Aishwarya R <quic_aisr@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_rx.c  | 29 ++++++++++++------------
 drivers/net/wireless/ath/ath12k/hal_rx.c |  4 +++-
 drivers/net/wireless/ath/ath12k/hal_rx.h |  2 +-
 3 files changed, 19 insertions(+), 16 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -3071,7 +3071,7 @@ static int ath12k_dp_rx_h_defrag_reo_rei
 	struct hal_rx_msdu_link *msdu_link;
 	struct hal_rx_msdu_details *msdu0;
 	struct hal_srng *srng;
-	dma_addr_t paddr;
+	dma_addr_t link_paddr, buf_paddr;
 	u32 desc_bank, msdu_info, msdu_ext_info, mpdu_info;
 	u32 cookie, hal_rx_desc_sz;
 	int ret;
@@ -3082,9 +3082,11 @@ static int ath12k_dp_rx_h_defrag_reo_rei
 	link_desc_banks = dp->link_desc_banks;
 	reo_dest_ring = rx_tid->dst_ring_desc;
 
-	ath12k_hal_rx_reo_ent_paddr_get(ab, reo_dest_ring, &paddr, &desc_bank);
+	ath12k_hal_rx_reo_ent_paddr_get(ab, reo_dest_ring, &link_paddr, &cookie);
+	desc_bank = FIELD_GET(DP_LINK_DESC_BANK_MASK, cookie);
+
 	msdu_link = (struct hal_rx_msdu_link *)(link_desc_banks[desc_bank].vaddr +
-			(paddr - link_desc_banks[desc_bank].paddr));
+			(link_paddr - link_desc_banks[desc_bank].paddr));
 	msdu0 = &msdu_link->msdu_link[0];
 	msdu_ext_info = msdu0->rx_msdu_ext_info.info0;
 	dst_ind = FIELD_GET(RX_MSDU_EXT_DESC_INFO0_REO_DEST_IND, msdu_ext_info);
@@ -3104,10 +3106,10 @@ static int ath12k_dp_rx_h_defrag_reo_rei
 	/* change msdu len in hal rx desc */
 	ath12k_dp_rxdesc_set_msdu_len(ab, rx_desc, defrag_skb->len - hal_rx_desc_sz);
 
-	paddr = dma_map_single(ab->dev, defrag_skb->data,
+	buf_paddr = dma_map_single(ab->dev, defrag_skb->data,
 			       defrag_skb->len + skb_tailroom(defrag_skb),
 			       DMA_FROM_DEVICE);
-	if (dma_mapping_error(ab->dev, paddr))
+	if (dma_mapping_error(ab->dev, buf_paddr))
 		return -ENOMEM;
 
 	spin_lock_bh(&dp->rx_desc_lock);
@@ -3115,6 +3117,7 @@ static int ath12k_dp_rx_h_defrag_reo_rei
 					     struct ath12k_rx_desc_info,
 					     list);
 	if (!desc_info) {
+		ath12k_warn(ab, "failed to find rx desc for reinject\n");
 		ret = -ENOMEM;
 		spin_unlock_bh(&dp->rx_desc_lock);
 		goto err_unmap_dma;
@@ -3122,15 +3125,14 @@ static int ath12k_dp_rx_h_defrag_reo_rei
 
 	desc_info->skb = defrag_skb;
 
-	cookie = desc_info->cookie;
-
 	list_del(&desc_info->list);
 	list_add_tail(&desc_info->list, &dp->rx_desc_used_list);
 	spin_unlock_bh(&dp->rx_desc_lock);
 
-	ATH12K_SKB_RXCB(defrag_skb)->paddr = paddr;
+	ATH12K_SKB_RXCB(defrag_skb)->paddr = buf_paddr;
 
-	ath12k_hal_rx_buf_addr_info_set(msdu0, paddr, cookie, HAL_RX_BUF_RBM_SW3_BM);
+	ath12k_hal_rx_buf_addr_info_set(msdu0, buf_paddr, desc_info->cookie,
+					HAL_RX_BUF_RBM_SW3_BM);
 
 	/* Fill mpdu details into reo entrace ring */
 	srng = &ab->hal.srng_list[dp->reo_reinject_ring.ring_id];
@@ -3144,12 +3146,11 @@ static int ath12k_dp_rx_h_defrag_reo_rei
 		ath12k_hal_srng_access_end(ab, srng);
 		spin_unlock_bh(&srng->lock);
 		ret = -ENOSPC;
-		goto err_free_idr;
+		goto err_free_desc;
 	}
 	memset(reo_ent_ring, 0, sizeof(*reo_ent_ring));
 
-	ath12k_hal_rx_reo_ent_paddr_get(ab, reo_dest_ring, &paddr, &desc_bank);
-	ath12k_hal_rx_buf_addr_info_set(reo_ent_ring, paddr, desc_bank,
+	ath12k_hal_rx_buf_addr_info_set(reo_ent_ring, link_paddr, cookie,
 					HAL_RX_BUF_RBM_WBM_CHIP0_IDLE_DESC_LIST);
 
 	mpdu_info = FIELD_PREP(RX_MPDU_DESC_INFO0_MSDU_COUNT, 1) |
@@ -3177,14 +3178,14 @@ static int ath12k_dp_rx_h_defrag_reo_rei
 
 	return 0;
 
-err_free_idr:
+err_free_desc:
 	spin_lock_bh(&dp->rx_desc_lock);
 	list_del(&desc_info->list);
 	list_add_tail(&desc_info->list, &dp->rx_desc_free_list);
 	desc_info->skb = NULL;
 	spin_unlock_bh(&dp->rx_desc_lock);
 err_unmap_dma:
-	dma_unmap_single(ab->dev, paddr, defrag_skb->len + skb_tailroom(defrag_skb),
+	dma_unmap_single(ab->dev, buf_paddr, defrag_skb->len + skb_tailroom(defrag_skb),
 			 DMA_FROM_DEVICE);
 	return ret;
 }
--- a/drivers/net/wireless/ath/ath12k/hal_rx.c
+++ b/drivers/net/wireless/ath/ath12k/hal_rx.c
@@ -325,6 +325,7 @@ int ath12k_hal_desc_reo_parse_err(struct
 	struct hal_reo_dest_ring *desc = (struct hal_reo_dest_ring *)rx_desc;
 	enum hal_reo_dest_ring_push_reason push_reason;
 	enum hal_reo_dest_ring_error_code err_code;
+	u32 cookie;
 
 	push_reason = FIELD_GET(HAL_REO_DEST_RING_INFO0_PUSH_REASON,
 				desc->info0);
@@ -345,7 +346,8 @@ int ath12k_hal_desc_reo_parse_err(struct
 		return -EINVAL;
 	}
 
-	ath12k_hal_rx_reo_ent_paddr_get(ab, rx_desc, paddr, desc_bank);
+	ath12k_hal_rx_reo_ent_paddr_get(ab, rx_desc, paddr, &cookie);
+	*desc_bank = FIELD_GET(DP_LINK_DESC_BANK_MASK, cookie);
 
 	return 0;
 }
@@ -428,17 +430,14 @@ int ath12k_hal_wbm_desc_parse_err(struct
 }
 
 void ath12k_hal_rx_reo_ent_paddr_get(struct ath12k_base *ab, void *desc,
-				     dma_addr_t *paddr, u32 *desc_bank)
+				     dma_addr_t *paddr, u32 *cookie)
 {
 	struct ath12k_buffer_addr *buff_addr = desc;
-	u32 cookie;
 
 	*paddr = ((u64)(FIELD_GET(BUFFER_ADDR_INFO1_ADDR, buff_addr->info1)) << 32) |
 		  FIELD_GET(BUFFER_ADDR_INFO0_ADDR, buff_addr->info0);
 
-	cookie = FIELD_GET(BUFFER_ADDR_INFO1_SW_COOKIE, buff_addr->info1);
-
-	*desc_bank = FIELD_GET(DP_LINK_DESC_BANK_MASK, cookie);
+	*cookie = FIELD_GET(BUFFER_ADDR_INFO1_SW_COOKIE, buff_addr->info1);
 }
 
 void ath12k_hal_rx_msdu_link_desc_set(struct ath12k_base *ab, void *desc,
--- a/drivers/net/wireless/ath/ath12k/hal_rx.h
+++ b/drivers/net/wireless/ath/ath12k/hal_rx.h
@@ -501,7 +501,7 @@ int ath12k_hal_desc_reo_parse_err(struct
 int ath12k_hal_wbm_desc_parse_err(struct ath12k_base *ab, void *desc,
 				  struct hal_rx_wbm_rel_info *rel_info);
 void ath12k_hal_rx_reo_ent_paddr_get(struct ath12k_base *ab, void *desc,
-				     dma_addr_t *paddr, u32 *desc_bank);
+				     dma_addr_t *paddr, u32 *cookie);
 void ath12k_hal_rx_reo_ent_buf_paddr_get(void *rx_desc,
 					 dma_addr_t *paddr, u32 *sw_cookie,
 					 void **pp_buf_addr_info, u8 *rbm,
