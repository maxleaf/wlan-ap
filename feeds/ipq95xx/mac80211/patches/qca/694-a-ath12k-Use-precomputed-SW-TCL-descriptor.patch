From 5e9dbc6d2feaca6468b6b1f88e8a9cfe552f1a7a Mon Sep 17 00:00:00 2001
From: Balamurugan Mahalingam <quic_bmahalin@quicinc.com>
Date: Thu, 10 Nov 2022 06:02:13 -0800
Subject: [PATCH 1/4] ath12k: Use precomputed SW TCL descriptor

Precompute and store all tx desc values that won't change
on a per packet basis. These precomputed values could be
reused on per vdev basis while transmitting packets. This
helps save CPU cycles on the mesh transmit enqueue path and
improve throughput.

Signed-off-by: Balamurugan Mahalingam <quic_bmahalin@quicinc.com>

diff --git a/drivers/net/wireless/ath/ath12k/core.h b/drivers/net/wireless/ath/ath12k/core.h
index 6104300..e02a7ee 100644
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -302,7 +302,16 @@ struct ath12k_vif_cache {
 	u32 bss_conf_changed;
 };
 
+struct ath12k_vif_tcl_desc_template {
+	u32 info0;
+	u32 info1;
+	u32 info2;
+	u32 info3;
+	u32 info4;
+};
+
 struct ath12k_vif {
+	struct ath12k_vif_tcl_desc_template desc;
 	u32 vdev_id;
 	enum wmi_vdev_type vdev_type;
 	enum wmi_vdev_subtype vdev_subtype;
diff --git a/drivers/net/wireless/ath/ath12k/dp.c b/drivers/net/wireless/ath/ath12k/dp.c
index 8b8365e..075efaf 100644
--- a/drivers/net/wireless/ath/ath12k/dp.c
+++ b/drivers/net/wireless/ath/ath12k/dp.c
@@ -449,6 +449,8 @@ void ath12k_dp_tx_update_bank_profile(struct ath12k_vif *arvif)
 
 	ath12k_dp_tx_put_bank_profile(dp, arvif->bank_id);
 	arvif->bank_id = ath12k_dp_tx_get_bank_profile(ab, arvif, dp);
+	arvif->desc.info0 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO0_BANK_ID,
+				       arvif->bank_id);
 }
 
 static void ath12k_dp_deinit_bank_profiles(struct ath12k_base *ab)
@@ -1157,6 +1159,19 @@ void ath12k_dp_vdev_tx_attach(struct ath12k *ar, struct ath12k_vif *arvif)
 	arvif->vdev_id_check_en = true;
 	arvif->bank_id = ath12k_dp_tx_get_bank_profile(ab, arvif, &ab->dp);
 
+	arvif->desc.info0 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO0_BANK_ID,
+				       arvif->bank_id);
+	arvif->desc.info1 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO1_CMD_NUM,
+				       arvif->tcl_metadata);
+	arvif->desc.info3 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO3_PMAC_ID,
+				       ar->lmac_id) |
+			    FIELD_PREP(HAL_TCL_DATA_CMD_INFO3_VDEV_ID,
+			    	       arvif->vdev_id);
+	arvif->desc.info4 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO4_SEARCH_INDEX,
+				       arvif->ast_idx) |
+			    FIELD_PREP(HAL_TCL_DATA_CMD_INFO4_CACHE_SET_NUM,
+			    	       arvif->ast_hash);
+
 	/* TODO: error path for bank id failure */
 	if (arvif->bank_id == DP_INVALID_BANK_ID) {
 		ath12k_err(ar->ab, "Failed to initialize DP TX Banks");
diff --git a/drivers/net/wireless/ath/ath12k/dp_tx.c b/drivers/net/wireless/ath/ath12k/dp_tx.c
index d7ceaf3..39a24f2 100644
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -208,19 +208,15 @@ int ath12k_dp_tx_direct(struct ath12k_vif *arvif, struct sk_buff *skb)
 	tcl_desc.buf_addr_info.info1 |=
 		FIELD_PREP(BUFFER_ADDR_INFO1_RET_BUF_MGR, rbm_id) |
 		FIELD_PREP(BUFFER_ADDR_INFO1_SW_COOKIE, tx_desc->desc_id);
-	tcl_desc.info0 =
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO0_DESC_TYPE, HAL_TCL_DESC_TYPE_BUFFER) |
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO0_BANK_ID, arvif->bank_id);
-	tcl_desc.info1 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO1_CMD_NUM,
-				    arvif->tcl_metadata);
+	tcl_desc.info0 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO0_DESC_TYPE,
+				    HAL_TCL_DESC_TYPE_BUFFER) | arvif->desc.info0;
+	tcl_desc.info1 =  arvif->desc.info1;
+
 	if (likely(skb->ip_summed == CHECKSUM_PARTIAL))
 		tcl_desc.info2 |= TX_IP_CHECKSUM;
 	tcl_desc.info2 |= FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_DATA_LEN, skb->len);
-	tcl_desc.info3 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO3_PMAC_ID, ar->lmac_id) |
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO3_VDEV_ID, arvif->vdev_id);
-	tcl_desc.info4 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO4_SEARCH_INDEX, arvif->ast_idx) |
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO4_CACHE_SET_NUM, arvif->ast_hash);
-
+	tcl_desc.info3 = arvif->desc.info3;
+	tcl_desc.info4 =  arvif->desc.info4;
 	memcpy(hal_tcl_desc, &tcl_desc, sizeof(tcl_desc));
 	dsb(st);
 	ath12k_hal_srng_access_umac_src_ring_end_nolock(ab->mem, tcl_ring);
@@ -255,6 +251,7 @@ int ath12k_dp_tx(struct ath12k *ar, struct ath12k_vif *arvif,
 	struct ieee80211_hdr *hdr = (void *)skb->data;
 	struct dp_tx_ring *tx_ring;
 	void *hal_tcl_desc;
+	struct hal_tcl_data_cmd *tcl_cmd;
 	u8 hal_ring_id;
 	int ret;
 	bool msdu_ext_desc = false;
@@ -293,20 +290,10 @@ int ath12k_dp_tx(struct ath12k *ar, struct ath12k_vif *arvif,
 	ti.addr_search_flags = arvif->hal_addr_search_flags;
 	ti.search_type = arvif->search_type;
 	ti.type = HAL_TCL_DESC_TYPE_BUFFER;
-	ti.pkt_offset = 0;
-	ti.lmac_id = ar->lmac_id;
-	ti.vdev_id = arvif->vdev_id;
-	ti.bss_ast_hash = arvif->ast_hash;
-	ti.bss_ast_idx = arvif->ast_idx;
-	ti.dscp_tid_tbl_idx = 0;
 
 	if (likely(skb->ip_summed == CHECKSUM_PARTIAL &&
 	    ti.encap_type != HAL_TCL_ENCAP_TYPE_RAW)) {
-		ti.flags0 |= FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_IP4_CKSUM_EN, 1) |
-			     FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_UDP4_CKSUM_EN, 1) |
-			     FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_UDP6_CKSUM_EN, 1) |
-			     FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_TCP4_CKSUM_EN, 1) |
-			     FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_TCP6_CKSUM_EN, 1);
+		ti.flags0 |= TX_IP_CHECKSUM;
 	}
 
 	switch (ti.encap_type) {
@@ -414,7 +401,27 @@ int ath12k_dp_tx(struct ath12k *ar, struct ath12k_vif *arvif,
 		goto fail_unmap_dma_ext_desc;
 	}
 
-	ath12k_hal_tx_cmd_desc_setup(ab, hal_tcl_desc, &ti);
+	tcl_cmd = (struct hal_tcl_data_cmd *)hal_tcl_desc;
+
+	tcl_cmd->buf_addr_info.info0 =
+		FIELD_PREP(BUFFER_ADDR_INFO0_ADDR, ti.paddr);
+	tcl_cmd->buf_addr_info.info1 =
+		FIELD_PREP(BUFFER_ADDR_INFO1_ADDR,
+			   ((uint64_t)ti.paddr >> HAL_ADDR_MSB_REG_SHIFT));
+	tcl_cmd->buf_addr_info.info1 |=
+		FIELD_PREP(BUFFER_ADDR_INFO1_RET_BUF_MGR,
+			   (ti.rbm_id)) |
+		FIELD_PREP(BUFFER_ADDR_INFO1_SW_COOKIE, ti.desc_id);
+
+	tcl_cmd->info0 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO0_DESC_TYPE,
+				    ti.type) | arvif->desc.info0;
+	tcl_cmd->info1 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO1_CMD_NUM,
+				    ti.meta_data_flags);
+	tcl_cmd->info2 = ti.flags0 |
+		FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_DATA_LEN, ti.data_len);
+	tcl_cmd->info3 = arvif->desc.info3;
+	tcl_cmd->info4 = arvif->desc.info4;
+	tcl_cmd->info5 = 0;
 
 	ath12k_hal_srng_access_end(ab, tcl_ring);
 
diff --git a/drivers/net/wireless/ath/ath12k/hal_tx.c b/drivers/net/wireless/ath/ath12k/hal_tx.c
index 81c087d..5b8dab3 100644
--- a/drivers/net/wireless/ath/ath12k/hal_tx.c
+++ b/drivers/net/wireless/ath/ath12k/hal_tx.c
@@ -34,44 +34,6 @@ static const u8 dscp_tid_map[DSCP_TID_MAP_TBL_ENTRY_SIZE] = {
 	7, 7, 7, 7, 7, 7, 7, 7,
 };
 
-void ath12k_hal_tx_cmd_desc_setup(struct ath12k_base *ab, void *cmd,
-				  struct hal_tx_info *ti)
-{
-	struct hal_tcl_data_cmd *tcl_cmd = (struct hal_tcl_data_cmd *)cmd;
-
-	tcl_cmd->buf_addr_info.info0 =
-		FIELD_PREP(BUFFER_ADDR_INFO0_ADDR, ti->paddr);
-	tcl_cmd->buf_addr_info.info1 =
-		FIELD_PREP(BUFFER_ADDR_INFO1_ADDR,
-			   ((uint64_t)ti->paddr >> HAL_ADDR_MSB_REG_SHIFT));
-	tcl_cmd->buf_addr_info.info1 |=
-		FIELD_PREP(BUFFER_ADDR_INFO1_RET_BUF_MGR,
-			   (ti->rbm_id)) |
-		FIELD_PREP(BUFFER_ADDR_INFO1_SW_COOKIE, ti->desc_id);
-
-	tcl_cmd->info0 =
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO0_DESC_TYPE, ti->type) |
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO0_BANK_ID, ti->bank_id);
-
-	tcl_cmd->info1 =
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO1_CMD_NUM,
-			   ti->meta_data_flags);
-
-	tcl_cmd->info2 = ti->flags0 |
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_DATA_LEN, ti->data_len) |
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO2_PKT_OFFSET, ti->pkt_offset);
-
-	tcl_cmd->info3 = ti->flags1 |
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO3_PMAC_ID, ti->lmac_id) |
-		FIELD_PREP(HAL_TCL_DATA_CMD_INFO3_VDEV_ID, ti->vdev_id);
-
-	tcl_cmd->info4 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO4_SEARCH_INDEX,
-				    ti->bss_ast_idx) |
-			 FIELD_PREP(HAL_TCL_DATA_CMD_INFO4_CACHE_SET_NUM,
-				    ti->bss_ast_hash);
-	tcl_cmd->info5 = 0;
-}
-
 void ath12k_hal_tx_set_dscp_tid_map(struct ath12k_base *ab, int id)
 {
 	u32 ctrl_reg_val;
diff --git a/drivers/net/wireless/ath/ath12k/hal_tx.h b/drivers/net/wireless/ath/ath12k/hal_tx.h
index f7be6f2..eca577b 100644
--- a/drivers/net/wireless/ath/ath12k/hal_tx.h
+++ b/drivers/net/wireless/ath/ath12k/hal_tx.h
@@ -80,8 +80,6 @@ struct hal_tx_status {
 /* STA mode will have MCAST_PKT_CTRL instead of DSCP_TID_MAP bitfield */
 #define HAL_TX_BANK_CONFIG_DSCP_TIP_MAP_ID	GENMASK(22, 17)
 
-void ath12k_hal_tx_cmd_desc_setup(struct ath12k_base *ab, void *cmd,
-				  struct hal_tx_info *ti);
 void ath12k_hal_tx_set_dscp_tid_map(struct ath12k_base *ab, int id);
 int ath12k_hal_reo_cmd_send(struct ath12k_base *ab, struct hal_srng *srng,
 			    enum hal_reo_cmd_type type,
diff --git a/drivers/net/wireless/ath/ath12k/peer.c b/drivers/net/wireless/ath/ath12k/peer.c
index 19e7da4..a68b8e1 100644
--- a/drivers/net/wireless/ath/ath12k/peer.c
+++ b/drivers/net/wireless/ath/ath12k/peer.c
@@ -333,6 +333,8 @@ int ath12k_peer_create(struct ath12k *ar, struct ath12k_vif *arvif,
 	if (arvif->vif->type == NL80211_IFTYPE_STATION) {
 		arvif->ast_hash = peer->ast_hash;
 		arvif->ast_idx = peer->hw_peer_id;
+		arvif->desc.info4 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO4_SEARCH_INDEX, arvif->ast_idx) |
+				    FIELD_PREP(HAL_TCL_DATA_CMD_INFO4_CACHE_SET_NUM, arvif->ast_hash);
 	}
 
 	peer->sec_type = HAL_ENCRYPT_TYPE_OPEN;
-- 
2.17.1

